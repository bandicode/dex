
\chapter{CLI}

This chapter describes the command line interface of \dex.

The version of \dex{} can be retrieved with the \c{--version} option (short \c{-v}).

\begin{code}
dex -v
\end{code}

A short help is available with \c{-?}, \c{-h} or \c{--help}.

\begin{code}
dex -h
\end{code}

Otherwise the program is usually invoked with the following syntax.

\begin{code}
dex [-i <input>]  [--value <variables>]  [-o <output>] 
\end{code}

Each \c{-i} specifies an input file or directory. Multiple instances can be used to 
specify more than one input. If the input is a directory, it is recursively searched 
for files with extension cxx, cpp, h or hpp.

Similarly, zero or more variables can be specified using the \c{--value} option.
The syntax for a variable is \c{key=value}. Multiple values can be specified if separated 
by a semicolon. Variables are exposed to the liquid rendering engine when generating 
the output.

Finally, one or more output should be specified with the \c{-o} option.
The output format is determined by the extension used in the path provided.

Example:

\begin{code}
dex -i doc --value project.name=dex;project.revision=1 -o result/*.md
\end{code}

Invokes \dex{} with the \c{doc} directory as input and specifies that the output 
must be written in the \c{result} directory in Markdown (md) format.
Additionnaly, the liquid rendering engine is given two variables:

\begin{list}
  \li \c{project.name} with the value \c{dex}
  \li \c{project.revision} with the value \c{1}
\end{list}

Currently supported export formats are: "md", "tex", "json".

Alternatively, a \c{dex.ini} file can be used to specify input/output/variables and 
allows the invokation of \dex{} without any option.

Example ini file:

\begin{code}[ini]
[general]
input=doc/manual.dex
output=result/*.md

[variables]
project.name=dex
\end{code}
